{"componentChunkName":"component---src-templates-post-tsx","path":"/git-stash/","result":{"data":{"markdownRemark":{"html":"<p>git pull 했을 때 발생하는 <strong>overwritten by merge</strong> 해결하는 법</p>\n<p>(로컬브랜치와 원격브랜치의 충돌)</p>\n<br>\n<h2 id=\"1-에러-발생\" style=\"position:relative;\"><a href=\"#1-%EC%97%90%EB%9F%AC-%EB%B0%9C%EC%83%9D\" aria-label=\"1 에러 발생 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. 에러 발생</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">error: Your local changes to the following files would be overwritten by merge:\n  .idea/codeStyles/Project.xml      &lt;- 이 파일 때문에 git pull 실패!</code></pre></div>\n<p>로컬에서 변경된 파일이 pull로 가져오려는 파일과 충돌이 나는 경우</p>\n<p>보통 commit을 잘해주면 되지만, commit하면 안 되는 파일인 경우 난감하다. <br>(또는 수정중이어서 commit을 못한 상태에서 다른 작업을 하는 경우)</p>\n<p>이럴 때 사용할 수 있는 방법!</p>\n<br>\n<br>\n<h2 id=\"2-해결-방법\" style=\"position:relative;\"><a href=\"#2-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\" aria-label=\"2 해결 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. 해결 방법</h2>\n<h3 id=\"1-git-stash\" style=\"position:relative;\"><a href=\"#1-git-stash\" aria-label=\"1 git stash permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1) git stash</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ git stash</code></pre></div>\n<p><code class=\"language-text\">git stash</code>는 local에서의 변경사항을 임시로 백업해서 <strong>working directory를 HEAD상태</strong>(clean working directory)로 만들어준다.</p>\n<p>따라서 <code class=\"language-text\">git stash</code>를 사용하면 unstaged 변경사항이 있을 때 commit하지 않아도 현재의 상황을 stash에 임시로 백업해두고 <code class=\"language-text\">git pull</code>을 할 수 있게 된다.</p>\n<br>\n<h3 id=\"2-git-pull\" style=\"position:relative;\"><a href=\"#2-git-pull\" aria-label=\"2 git pull permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2) git pull</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ git pull\n       -&gt; 현재 branch에 remote 되어있는 branch에서 Pull 해온다.</code></pre></div>\n<p>또는</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ git pull origin &lt;branch name&gt;     \n       -&gt; origin에 연동된 원격저장소에서 특정 branch만 pull 해온다.</code></pre></div>\n<p>해주면 pull 이 성공적으로 된다!!🥳</p>\n<br>\n<h3 id=\"3-git-stash-pop\" style=\"position:relative;\"><a href=\"#3-git-stash-pop\" aria-label=\"3 git stash pop permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3) git stash pop</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ git stash pop</code></pre></div>\n<p>으로 저장된 stash를 다시 적용한다.</p>\n<p><code class=\"language-text\">git stash pop</code>은 stash에 저장한 내용을 working directory에 적용하고, stash에서 제거한다.</p>\n<br>\n<br>\n<h2 id=\"3-git-pull-충돌시-정리\" style=\"position:relative;\"><a href=\"#3-git-pull-%EC%B6%A9%EB%8F%8C%EC%8B%9C-%EC%A0%95%EB%A6%AC\" aria-label=\"3 git pull 충돌시 정리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. git pull 충돌시 정리</h2>\n<blockquote>\n<p><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>g</mi><mi>i</mi><mi>t</mi><mi>s</mi><mi>t</mi><mi>a</mi><mi>s</mi><mi>h</mi><mo>&lt;</mo><mi>b</mi><mi>r</mi><mo>&gt;</mo></mrow><annotation encoding=\"application/x-tex\">git stash&lt;br&gt;</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">g</span><span class=\"mord mathdefault\">i</span><span class=\"mord mathdefault\">t</span><span class=\"mord mathdefault\">s</span><span class=\"mord mathdefault\">t</span><span class=\"mord mathdefault\">a</span><span class=\"mord mathdefault\">s</span><span class=\"mord mathdefault\">h</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&lt;</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.73354em;vertical-align:-0.0391em;\"></span><span class=\"mord mathdefault\">b</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">&gt;</span></span></span></span> git pull<br>\n$ git stash pop</p>\n</blockquote>\n<br>\n<br>\n<h2 id=\"4-참조\" style=\"position:relative;\"><a href=\"#4-%EC%B0%B8%EC%A1%B0\" aria-label=\"4 참조 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. 참조</h2>\n<ul>\n<li><a href=\"https://potensj.tistory.com/90\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">git pull 시 특정 branch 를 pull 해오기</a></li>\n<li><a href=\"https://nesoy.github.io/articles/2017-03/Git-Stash\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Git Pull 충돌 오류시 해결방법</a></li>\n<li><a href=\"https://git-scm.com/docs/git-stash\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Git 공식사이트</a></li>\n</ul>\n<hr>\n<p><em>! 예전 블로그에서 옮겨온 게시물입니다.</em></p>","excerpt":"git pull 했을 때 발생하는 overwritten by merge 해결하는 법 (로컬브랜치와 원격브랜치의 충돌) 1. 에러 발생 로컬에서 변경된 파일이 pull로 가져오려는 파일과 충돌이 나는 경우 보통 commit…","tableOfContents":"<ul>\n<li><a href=\"/git-stash/#1-%EC%97%90%EB%9F%AC-%EB%B0%9C%EC%83%9D\">1. 에러 발생</a></li>\n<li>\n<p><a href=\"/git-stash/#2-%ED%95%B4%EA%B2%B0-%EB%B0%A9%EB%B2%95\">2. 해결 방법</a></p>\n<ul>\n<li><a href=\"/git-stash/#1-git-stash\">1) git stash</a></li>\n<li><a href=\"/git-stash/#2-git-pull\">2) git pull</a></li>\n<li><a href=\"/git-stash/#3-git-stash-pop\">3) git stash pop</a></li>\n</ul>\n</li>\n<li><a href=\"/git-stash/#3-git-pull-%EC%B6%A9%EB%8F%8C%EC%8B%9C-%EC%A0%95%EB%A6%AC\">3. git pull 충돌시 정리</a></li>\n<li><a href=\"/git-stash/#4-%EC%B0%B8%EC%A1%B0\">4. 참조</a></li>\n</ul>","fields":{"slug":"/git-stash/"},"frontmatter":{"title":"[Git] git pull 충돌 에러 해결법 = git stash","date":"Dec 16, 2019","tags":["Git","TIP"],"keywords":["git"],"update":"Jan 01, 0001"}}},"pageContext":{"slug":"/git-stash/","series":[],"lastmod":"0001-01-01"}}}